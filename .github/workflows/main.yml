# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  push:
    branches:
      - 'prod-frontend'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: 'prod-frontend'

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: pawprojekt2025/pawprojekt2025


      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./bookbox-frontend
          file: ./bookbox-frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/pawprojekt2025/pawprojekt2025
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Docker login
        uses: azure/docker-login@v1
        with:
          login-server: index.docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and configure Azure Web App (if not exists)
        run: |
          APP_NAME="projektpaw"
          APP_EXISTS=$(az webapp list --query "[?name=='$APP_NAME'].name" -o tsv)
          if [ -z "$APP_EXISTS" ]; then
            echo "Creating Azure Web App..."
            az webapp create --resource-group ProjektPAW \
              --plan ProjektPAW-MainResourcePlan \
              --name $APP_NAME \
              --container-registry-url index.docker.io \
              -c pawprojekt2025/pawprojekt2025:prod-frontend \
              -s ${{ secrets.DOCKER_USERNAME }} \
              -w ${{ secrets.DOCKER_PASSWORD }}
          else
            echo "App already exists, skipping creation."
          fi
          echo "Setting environment variables..."
          az webapp config appsettings set \
            --name $APP_NAME \
            --resource-group ProjektPAW \
            --settings NEXT_PUBLIC_API_URL=https://api-projektpaw.azurewebsites.net


      - name: Deploy to Azure Container Instances
        uses: azure/webapps-deploy@v2
        with:
          images: pawprojekt2025/pawprojekt2025:prod-frontend
          app-name: projektpaw